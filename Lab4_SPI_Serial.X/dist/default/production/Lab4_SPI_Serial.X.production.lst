

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 13:12:37 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0013                     _SSPBUF	set	19
   285  0014                     _SSPCON	set	20
   286  0007                     _PORTC	set	7
   287  0018                     _RCSTAbits	set	24
   288  0006                     _PORTB	set	6
   289  001A                     _RCREG	set	26
   290  000C                     _PIR1bits	set	12
   291  0019                     _TXREG	set	25
   292  0094                     _SSPSTATbits	set	148
   293  0094                     _SSPSTAT	set	148
   294  009F                     _ADCON1	set	159
   295  0087                     _TRISC	set	135
   296  0086                     _TRISB	set	134
   297  008C                     _PIE1bits	set	140
   298  009A                     _SPBRGH	set	154
   299  0099                     _SPBRG	set	153
   300  0098                     _TXSTAbits	set	152
   301  043B                     _TRISC3	set	1083
   302  043D                     _TRISC5	set	1085
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305  0187                     _BAUDCTLbits	set	391
   306                           
   307                           ; #config settings
   308  0000                     
   309                           	psect	cinit
   310  07F6                     start_initialization:	
   311  07F6                     __initialization:	
   312                           
   313                           ; Clear objects allocated to COMMON
   314  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
   315  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   316  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   317  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   318  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   319  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   320  07FC                     end_of_initialization:	
   321                           ;End of C runtime variable initialization code
   322                           
   323  07FC                     __end_of__initialization:	
   324  07FC  0183               	clrf	3
   325  07FD  120A  118A  2F9F   	ljmp	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMMON
   328  0070                     __pbssCOMMON:	
   329  0070                     _count:	
   330  0070                     	ds	2
   331  0072                     _POT2:	
   332  0072                     	ds	2
   333  0074                     _POT1:	
   334  0074                     	ds	2
   335                           
   336                           	psect	cstackCOMMON
   337  0076                     __pcstackCOMMON:	
   338  0076                     ?_init_serial:	
   339  0076                     ??_init_serial:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0076                     ?_init_config:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0076                     ?_spiWrite:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0076                     ??_spiWrite:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0076                     ?_spiRead:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0076                     ??_spiRead:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0076                     ?_spiInit:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0076                     ?_main:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0076                     ?_spiReceiveWait:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0076                     ??_spiReceiveWait:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0076                     spiInit@sDataSample:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0076                     spiWrite@dat:	
   373                           ; 1 bytes @ 0x0
   374                           
   375                           
   376                           ; 1 bytes @ 0x0
   377  0076                     	ds	1
   378  0077                     spiInit@sClockIdle:	
   379                           
   380                           ; 1 bytes @ 0x1
   381  0077                     	ds	1
   382  0078                     spiInit@sTransmitEdge:	
   383                           
   384                           ; 1 bytes @ 0x2
   385  0078                     	ds	1
   386  0079                     ??_spiInit:	
   387  0079                     spiInit@sType:	
   388                           ; 1 bytes @ 0x3
   389                           
   390                           
   391                           ; 1 bytes @ 0x3
   392  0079                     	ds	1
   393  007A                     ??_init_config:	
   394  007A                     ??_main:	
   395                           ; 1 bytes @ 0x4
   396                           
   397                           
   398                           ; 1 bytes @ 0x4
   399  007A                     	ds	2
   400                           
   401                           	psect	maintext
   402  079F                     __pmaintext:	
   403 ;;
   404 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   405 ;;
   406 ;; *************** function _main *****************
   407 ;; Defined at:
   408 ;;		line 44 in file "Lab4_SPI_MASTER.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, status,2, status,0, pclath, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : B00/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   422 ;;      Params:         0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0
   424 ;;      Temps:          2       0       0       0       0
   425 ;;      Totals:         2       0       0       0       0
   426 ;;Total ram usage:        2 bytes
   427 ;; Hardware stack levels required when called:    2
   428 ;; This function calls:
   429 ;;		_init_config
   430 ;;		_init_serial
   431 ;;		_spiRead
   432 ;;		_spiWrite
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _main
   440  079F                     _main:	
   441  079F                     l796:	
   442                           ;incstack = 0
   443                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   444                           
   445                           
   446                           ;Lab4_SPI_MASTER.c: 45:     init_serial();
   447  079F  120A  118A  276C  120A  118A  	fcall	_init_serial
   448                           
   449                           ;Lab4_SPI_MASTER.c: 46:     init_config();
   450  07A4  120A  118A  2785  120A  118A  	fcall	_init_config
   451  07A9                     l55:	
   452                           ;Lab4_SPI_MASTER.c: 49:     while(1){
   453                           
   454                           
   455                           ;Lab4_SPI_MASTER.c: 51:        spiWrite(1);
   456  07A9  3001               	movlw	1
   457  07AA  120A  118A  2740  120A  118A  	fcall	_spiWrite
   458                           
   459                           ;Lab4_SPI_MASTER.c: 52:        POT1 = spiRead();
   460  07AF  120A  118A  274D  120A  118A  	fcall	_spiRead
   461  07B4  00FA               	movwf	??_main
   462  07B5  01FB               	clrf	??_main+1
   463  07B6  087A               	movf	??_main,w
   464  07B7  00F4               	movwf	_POT1
   465  07B8  087B               	movf	??_main+1,w
   466  07B9  00F5               	movwf	_POT1+1
   467  07BA                     l798:	
   468                           
   469                           ;Lab4_SPI_MASTER.c: 53:        _delay((unsigned long)((5)*(4000000/4000.0)));
   470  07BA  3007               	movlw	7
   471  07BB  00FB               	movwf	??_main+1
   472  07BC  307D               	movlw	125
   473  07BD  00FA               	movwf	??_main
   474  07BE                     u87:	
   475  07BE  0BFA               	decfsz	??_main,f
   476  07BF  2FBE               	goto	u87
   477  07C0  0BFB               	decfsz	??_main+1,f
   478  07C1  2FBE               	goto	u87
   479  07C2                     l800:	
   480                           
   481                           ;Lab4_SPI_MASTER.c: 54:        spiWrite(0);
   482  07C2  3000               	movlw	0
   483  07C3  120A  118A  2740  120A  118A  	fcall	_spiWrite
   484  07C8                     l802:	
   485                           
   486                           ;Lab4_SPI_MASTER.c: 55:        POT2 = spiRead();
   487  07C8  120A  118A  274D  120A  118A  	fcall	_spiRead
   488  07CD  00FA               	movwf	??_main
   489  07CE  01FB               	clrf	??_main+1
   490  07CF  087A               	movf	??_main,w
   491  07D0  00F2               	movwf	_POT2
   492  07D1  087B               	movf	??_main+1,w
   493  07D2  00F3               	movwf	_POT2+1
   494  07D3                     l804:	
   495                           
   496                           ;Lab4_SPI_MASTER.c: 56:        _delay((unsigned long)((5)*(4000000/4000.0)));
   497  07D3  3007               	movlw	7
   498  07D4  00FB               	movwf	??_main+1
   499  07D5  307D               	movlw	125
   500  07D6  00FA               	movwf	??_main
   501  07D7                     u97:	
   502  07D7  0BFA               	decfsz	??_main,f
   503  07D8  2FD7               	goto	u97
   504  07D9  0BFB               	decfsz	??_main+1,f
   505  07DA  2FD7               	goto	u97
   506  07DB                     l806:	
   507                           
   508                           ;Lab4_SPI_MASTER.c: 58:         TXREG = POT1;
   509  07DB  0874               	movf	_POT1,w
   510  07DC  1283               	bcf	3,5	;RP0=0, select bank0
   511  07DD  1303               	bcf	3,6	;RP1=0, select bank0
   512  07DE  0099               	movwf	25	;volatile
   513  07DF                     l56:	
   514                           ;Lab4_SPI_MASTER.c: 60:         }
   515                           
   516                           
   517                           ;Lab4_SPI_MASTER.c: 59:         while (PIR1bits.TXIF == 0){
   518  07DF  1E0C               	btfss	12,4	;volatile
   519  07E0  2FE2               	goto	u61
   520  07E1  2FE3               	goto	u60
   521  07E2                     u61:	
   522  07E2  2FDF               	goto	l56
   523  07E3                     u60:	
   524  07E3                     l808:	
   525                           
   526                           ;Lab4_SPI_MASTER.c: 62:         TXREG = POT2;
   527  07E3  0872               	movf	_POT2,w
   528  07E4  0099               	movwf	25	;volatile
   529  07E5                     l59:	
   530                           ;Lab4_SPI_MASTER.c: 64:         }
   531                           
   532                           
   533                           ;Lab4_SPI_MASTER.c: 63:         while (PIR1bits.TXIF ==0){
   534  07E5  1E0C               	btfss	12,4	;volatile
   535  07E6  2FE8               	goto	u71
   536  07E7  2FE9               	goto	u70
   537  07E8                     u71:	
   538  07E8  2FE5               	goto	l59
   539  07E9                     u70:	
   540  07E9                     l810:	
   541                           
   542                           ;Lab4_SPI_MASTER.c: 66:         count = RCREG;
   543  07E9  081A               	movf	26,w	;volatile
   544  07EA  00FA               	movwf	??_main
   545  07EB  01FB               	clrf	??_main+1
   546  07EC  087A               	movf	??_main,w
   547  07ED  00F0               	movwf	_count
   548  07EE  087B               	movf	??_main+1,w
   549  07EF  00F1               	movwf	_count+1
   550                           
   551                           ;Lab4_SPI_MASTER.c: 67:         PORTB = count;
   552  07F0  0870               	movf	_count,w
   553  07F1  0086               	movwf	6	;volatile
   554  07F2  2FA9               	goto	l55
   555  07F3  120A  118A  2800   	ljmp	start
   556  07F6                     __end_of_main:	
   557                           
   558                           	psect	text1
   559  0740                     __ptext1:	
   560 ;; *************** function _spiWrite *****************
   561 ;; Defined at:
   562 ;;		line 34 in file "SPI.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;  dat             1    wreg     unsigned char 
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  dat             1    0[COMMON] unsigned char 
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         0       0       0       0       0
   577 ;;      Locals:         1       0       0       0       0
   578 ;;      Temps:          0       0       0       0       0
   579 ;;      Totals:         1       0       0       0       0
   580 ;;Total ram usage:        1 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           
   590                           ;psect for function _spiWrite
   591  0740                     _spiWrite:	
   592                           
   593                           ;incstack = 0
   594                           ; Regs used in _spiWrite: [wreg]
   595                           ;spiWrite@dat stored from wreg
   596  0740  00F6               	movwf	spiWrite@dat
   597  0741                     l740:	
   598                           
   599                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   600  0741  0876               	movf	spiWrite@dat,w
   601  0742  1283               	bcf	3,5	;RP0=0, select bank0
   602  0743  1303               	bcf	3,6	;RP1=0, select bank0
   603  0744  0093               	movwf	19	;volatile
   604  0745                     l96:	
   605  0745  0008               	return
   606  0746                     __end_of_spiWrite:	
   607                           
   608                           	psect	text2
   609  074D                     __ptext2:	
   610 ;; *************** function _spiRead *****************
   611 ;; Defined at:
   612 ;;		line 47 in file "SPI.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      unsigned char 
   619 ;; Registers used:
   620 ;;		wreg, status,2, status,0, pclath, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0
   629 ;;      Totals:         0       0       0       0       0
   630 ;;Total ram usage:        0 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    1
   633 ;; This function calls:
   634 ;;		_spiReceiveWait
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _spiRead
   642  074D                     _spiRead:	
   643  074D                     l742:	
   644                           ;incstack = 0
   645                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   646                           
   647                           
   648                           ;SPI.c: 49:     spiReceiveWait();
   649  074D  120A  118A  2746  120A  118A  	fcall	_spiReceiveWait
   650  0752                     l744:	
   651                           
   652                           ;SPI.c: 50:     return(SSPBUF);
   653  0752  1283               	bcf	3,5	;RP0=0, select bank0
   654  0753  1303               	bcf	3,6	;RP1=0, select bank0
   655  0754  0813               	movf	19,w	;volatile
   656  0755                     l104:	
   657  0755  0008               	return
   658  0756                     __end_of_spiRead:	
   659                           
   660                           	psect	text3
   661  0746                     __ptext3:	
   662 ;; *************** function _spiReceiveWait *****************
   663 ;; Defined at:
   664 ;;		line 29 in file "SPI.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		None
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0
   681 ;;      Totals:         0       0       0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		_spiRead
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           
   692                           ;psect for function _spiReceiveWait
   693  0746                     _spiReceiveWait:	
   694  0746                     l706:	
   695                           ;incstack = 0
   696                           ; Regs used in _spiReceiveWait: []
   697                           
   698  0746                     l90:	
   699                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   700                           
   701  0746  1683               	bsf	3,5	;RP0=1, select bank1
   702  0747  1303               	bcf	3,6	;RP1=0, select bank1
   703  0748  1C14               	btfss	20,0	;volatile
   704  0749  2F4B               	goto	u21
   705  074A  2F4C               	goto	u20
   706  074B                     u21:	
   707  074B  2F46               	goto	l90
   708  074C                     u20:	
   709  074C                     l93:	
   710  074C  0008               	return
   711  074D                     __end_of_spiReceiveWait:	
   712                           
   713                           	psect	text4
   714  076C                     __ptext4:	
   715 ;; *************** function _init_serial *****************
   716 ;; Defined at:
   717 ;;		line 75 in file "Lab4_SPI_MASTER.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   731 ;;      Params:         0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0
   734 ;;      Totals:         0       0       0       0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_main
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           
   745                           ;psect for function _init_serial
   746  076C                     _init_serial:	
   747  076C                     l708:	
   748                           ;incstack = 0
   749                           ; Regs used in _init_serial: [wreg+status,2]
   750                           
   751                           
   752                           ;Lab4_SPI_MASTER.c: 77:     TXSTAbits.SYNC = 0;
   753  076C  1683               	bsf	3,5	;RP0=1, select bank1
   754  076D  1303               	bcf	3,6	;RP1=0, select bank1
   755  076E  1218               	bcf	24,4	;volatile
   756                           
   757                           ;Lab4_SPI_MASTER.c: 78:     TXSTAbits.BRGH = 1;
   758  076F  1518               	bsf	24,2	;volatile
   759                           
   760                           ;Lab4_SPI_MASTER.c: 79:     TXSTAbits.TXEN = 1;
   761  0770  1698               	bsf	24,5	;volatile
   762                           
   763                           ;Lab4_SPI_MASTER.c: 81:     BAUDCTLbits.BRG16 = 1;
   764  0771  1683               	bsf	3,5	;RP0=1, select bank3
   765  0772  1703               	bsf	3,6	;RP1=1, select bank3
   766  0773  1587               	bsf	7,3	;volatile
   767  0774                     l710:	
   768                           
   769                           ;Lab4_SPI_MASTER.c: 82:     SPBRG = 103;
   770  0774  3067               	movlw	103
   771  0775  1683               	bsf	3,5	;RP0=1, select bank1
   772  0776  1303               	bcf	3,6	;RP1=0, select bank1
   773  0777  0099               	movwf	25	;volatile
   774  0778                     l712:	
   775                           
   776                           ;Lab4_SPI_MASTER.c: 83:     SPBRGH = 0;
   777  0778  019A               	clrf	26	;volatile
   778  0779                     l714:	
   779                           
   780                           ;Lab4_SPI_MASTER.c: 85:     RCSTAbits.SPEN = 1;
   781  0779  1283               	bcf	3,5	;RP0=0, select bank0
   782  077A  1303               	bcf	3,6	;RP1=0, select bank0
   783  077B  1798               	bsf	24,7	;volatile
   784  077C                     l716:	
   785                           
   786                           ;Lab4_SPI_MASTER.c: 86:     RCSTAbits.RX9 = 0;
   787  077C  1318               	bcf	24,6	;volatile
   788  077D                     l718:	
   789                           
   790                           ;Lab4_SPI_MASTER.c: 87:     RCSTAbits.CREN = 1;
   791  077D  1618               	bsf	24,4	;volatile
   792  077E                     l720:	
   793                           
   794                           ;Lab4_SPI_MASTER.c: 89:     PIE1bits.RCIE = 1;
   795  077E  1683               	bsf	3,5	;RP0=1, select bank1
   796  077F  1303               	bcf	3,6	;RP1=0, select bank1
   797  0780  168C               	bsf	12,5	;volatile
   798  0781                     l722:	
   799                           
   800                           ;Lab4_SPI_MASTER.c: 90:     PIR1bits.RCIF = 0;
   801  0781  1283               	bcf	3,5	;RP0=0, select bank0
   802  0782  1303               	bcf	3,6	;RP1=0, select bank0
   803  0783  128C               	bcf	12,5	;volatile
   804  0784                     l67:	
   805  0784  0008               	return
   806  0785                     __end_of_init_serial:	
   807                           
   808                           	psect	text5
   809  0785                     __ptext5:	
   810 ;; *************** function _init_config *****************
   811 ;; Defined at:
   812 ;;		line 93 in file "Lab4_SPI_MASTER.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0, pclath, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0
   829 ;;      Totals:         0       0       0       0       0
   830 ;;Total ram usage:        0 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    1
   833 ;; This function calls:
   834 ;;		_spiInit
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           
   841                           ;psect for function _init_config
   842  0785                     _init_config:	
   843  0785                     l780:	
   844                           ;incstack = 0
   845                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   846                           
   847                           
   848                           ;Lab4_SPI_MASTER.c: 95:     TRISB = 0x00;
   849  0785  1683               	bsf	3,5	;RP0=1, select bank1
   850  0786  1303               	bcf	3,6	;RP1=0, select bank1
   851  0787  0186               	clrf	6	;volatile
   852  0788                     l782:	
   853                           
   854                           ;Lab4_SPI_MASTER.c: 96:     TRISC = 0b00010000;
   855  0788  3010               	movlw	16
   856  0789  0087               	movwf	7	;volatile
   857  078A                     l784:	
   858                           
   859                           ;Lab4_SPI_MASTER.c: 97:     ANSEL = 0;
   860  078A  1683               	bsf	3,5	;RP0=1, select bank3
   861  078B  1703               	bsf	3,6	;RP1=1, select bank3
   862  078C  0188               	clrf	8	;volatile
   863  078D                     l786:	
   864                           
   865                           ;Lab4_SPI_MASTER.c: 98:     ANSELH = 0;
   866  078D  0189               	clrf	9	;volatile
   867  078E                     l788:	
   868                           
   869                           ;Lab4_SPI_MASTER.c: 100:     PORTB = 0;
   870  078E  1283               	bcf	3,5	;RP0=0, select bank0
   871  078F  1303               	bcf	3,6	;RP1=0, select bank0
   872  0790  0186               	clrf	6	;volatile
   873  0791                     l790:	
   874                           
   875                           ;Lab4_SPI_MASTER.c: 101:     PORTC = 0;
   876  0791  0187               	clrf	7	;volatile
   877  0792                     l792:	
   878                           
   879                           ;Lab4_SPI_MASTER.c: 103:     ADCON1 = 0;
   880  0792  1683               	bsf	3,5	;RP0=1, select bank1
   881  0793  1303               	bcf	3,6	;RP1=0, select bank1
   882  0794  019F               	clrf	31	;volatile
   883  0795                     l794:	
   884                           
   885                           ;Lab4_SPI_MASTER.c: 104:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CL
      +                          OCK_IDLE_LOW, SPI_IDLE_2_ACTIVE);
   886  0795  01F6               	clrf	spiInit@sDataSample
   887  0796  01F7               	clrf	spiInit@sClockIdle
   888  0797  01F8               	clrf	spiInit@sTransmitEdge
   889  0798  3020               	movlw	32
   890  0799  120A  118A  2756  120A  118A  	fcall	_spiInit
   891  079E                     l70:	
   892  079E  0008               	return
   893  079F                     __end_of_init_config:	
   894                           
   895                           	psect	text6
   896  0756                     __ptext6:	
   897 ;; *************** function _spiInit *****************
   898 ;; Defined at:
   899 ;;		line 12 in file "SPI.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;  sType           1    wreg     enum E1264
   902 ;;  sDataSample     1    0[COMMON] enum E1272
   903 ;;  sClockIdle      1    1[COMMON] enum E1276
   904 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   905 ;; Auto vars:     Size  Location     Type
   906 ;;  sType           1    3[COMMON] enum E1264
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, status,2, status,0
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         3       0       0       0       0
   917 ;;      Locals:         1       0       0       0       0
   918 ;;      Temps:          0       0       0       0       0
   919 ;;      Totals:         4       0       0       0       0
   920 ;;Total ram usage:        4 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_init_config
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           
   930                           ;psect for function _spiInit
   931  0756                     _spiInit:	
   932                           
   933                           ;incstack = 0
   934                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   935                           ;spiInit@sType stored from wreg
   936  0756  00F9               	movwf	spiInit@sType
   937  0757                     l770:	
   938                           
   939                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   940  0757  1683               	bsf	3,5	;RP0=1, select bank1
   941  0758  1303               	bcf	3,6	;RP1=0, select bank1
   942  0759  1287               	bcf	7,5	;volatile
   943                           
   944                           ;SPI.c: 15:     if(sType & 0b00000100)
   945  075A  1D79               	btfss	spiInit@sType,2
   946  075B  2F5D               	goto	u51
   947  075C  2F5E               	goto	u50
   948  075D                     u51:	
   949  075D  2F62               	goto	l776
   950  075E                     u50:	
   951  075E                     l772:	
   952                           
   953                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   954  075E  0878               	movf	spiInit@sTransmitEdge,w
   955  075F  0094               	movwf	20	;volatile
   956  0760                     l774:	
   957                           
   958                           ;SPI.c: 18:         TRISC3 = 1;
   959  0760  1587               	bsf	7,3	;volatile
   960                           
   961                           ;SPI.c: 19:     }
   962  0761  2F66               	goto	l86
   963  0762                     l776:	
   964                           
   965                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   966  0762  0876               	movf	spiInit@sDataSample,w
   967  0763  0478               	iorwf	spiInit@sTransmitEdge,w
   968  0764  0094               	movwf	20	;volatile
   969  0765                     l778:	
   970                           
   971                           ;SPI.c: 23:         TRISC3 = 0;
   972  0765  1187               	bcf	7,3	;volatile
   973  0766                     l86:	
   974                           ;SPI.c: 24:     }
   975                           
   976                           
   977                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   978  0766  0879               	movf	spiInit@sType,w
   979  0767  0477               	iorwf	spiInit@sClockIdle,w
   980  0768  1283               	bcf	3,5	;RP0=0, select bank0
   981  0769  1303               	bcf	3,6	;RP1=0, select bank0
   982  076A  0094               	movwf	20	;volatile
   983  076B                     l87:	
   984  076B  0008               	return
   985  076C                     __end_of_spiInit:	
   986  007E                     btemp	set	126	;btemp
   987  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _init_config->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMMON     2     2      0
                        _init_config
                        _init_serial
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_serial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _spiInit
   _init_serial
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 13:12:37 2020

            __CFG_CP$OFF 0000              _SSPSTATbits 0094                       l70 079E  
                     l55 07A9                       l56 07DF                       l90 0746  
                     l67 0784                       l59 07E5                       l93 074C  
                     l86 0766                       l87 076B                       l96 0745  
                     u20 074C                       u21 074B                       u50 075E  
                     u51 075D                       u60 07E3                       u61 07E2  
                     u70 07E9                       u71 07E8                       u87 07BE  
                     u97 07D7                      l104 0755                      l710 0774  
                    l720 077E                      l712 0778                      l800 07C2  
                    l722 0781                      l714 0779                      l706 0746  
                    l810 07E9                      l802 07C8                      l716 077C  
                    l708 076C                      l740 0741                      l804 07D3  
                    l718 077D                      l742 074D                      l806 07DB  
                    l744 0752                      l808 07E3                      l770 0757  
                    l772 075E                      l780 0785                      l774 0760  
                    l790 0791                      l782 0788                      l776 0762  
                    l792 0792                      l784 078A                      l778 0765  
                    l794 0795                      l786 078D                      l788 078E  
                    l796 079F                      l798 07BA             __CFG_CPD$OFF 0000  
           __CFG_LVP$OFF 0000                     _POT1 0074                     _POT2 0072  
           __CFG_WRT$OFF 0000                     _main 079F                     btemp 007E  
                   start 0000            __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000  
                  ?_main 0076            __CFG_WDTE$OFF 0000                    _ANSEL 0188  
           ?_init_config 0076                    _RCREG 001A                    _SPBRG 0099  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087                    _TXREG 0019             ?_init_serial 0076  
         __CFG_FCMEN$OFF 0000                    _count 0070           __CFG_BOREN$OFF 0000  
        __end_of_spiInit 076C          __end_of_spiRead 0756                    status 0003  
                  wtemp0 007E          __initialization 07F6             __end_of_main 07F6  
                 ??_main 007A                   _ADCON1 009F                   _ANSELH 0189  
                 _SPBRGH 009A                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013           __CFG_PWRTE$OFF 0000  
       __end_of_spiWrite 0746                ??_spiInit 0079                ??_spiRead 0076  
__end_of__initialization 07FC           __pcstackCOMMON 0076     __size_of_init_config 001A  
   __size_of_init_serial 0019               __pmaintext 079F  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0076                  __ptext1 0740  
                __ptext2 074D                  __ptext3 0746                  __ptext4 076C  
                __ptext5 0785                  __ptext6 0756                  _spiInit 0756  
                _spiRead 074D     end_of_initialization 07FC                _RCSTAbits 0018  
             ??_spiWrite 0076              spiWrite@dat 0076                _TXSTAbits 0098  
         _spiReceiveWait 0746              _BAUDCTLbits 0187      start_initialization 07F6  
 __end_of_spiReceiveWait 074D            ??_init_config 007A            ??_init_serial 0076  
            __pbssCOMMON 0070                ___latbits 0002   __CFG_FOSC$INTRC_CLKOUT 0000  
        ?_spiReceiveWait 0076        __size_of_spiWrite 0006                 ?_spiInit 0076  
               ?_spiRead 0076      __end_of_init_config 079F      __end_of_init_serial 0785  
   spiInit@sTransmitEdge 0078                 _PIE1bits 008C       spiInit@sDataSample 0076  
               _PIR1bits 000C              _init_config 0785              _init_serial 076C  
       __size_of_spiInit 0016         __size_of_spiRead 0009        __CFG_BOR4V$BOR40V 0000  
          __size_of_main 0057                 _spiWrite 0740             spiInit@sType 0079  
      spiInit@sClockIdle 0077         ??_spiReceiveWait 0076  
